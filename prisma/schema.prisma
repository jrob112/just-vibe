generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int             @id @default(autoincrement())
  name           String
  username       String
  googleId       String          @unique
  location       String
  favorite       Favorite[]
  reviews        Review[]
  userEvents     UserEvent[]
  albumsOfTheDay AlbumOfTheDay[]
}

model Review {
  id      Int    @id @default(autoincrement())
  text    String
  rating  Int
  userId  Int
  albumId Int
  user    User   @relation(fields: [userId], references: [id])
  Album   Album  @relation(fields: [albumId], references: [id])

  @@index([albumId], map: "Review_albumId_fkey")
  @@index([userId], map: "Review_userId_fkey")
}

model Event {
  id         Int         @id @default(autoincrement())
  venue      String
  location   String
  userEvents UserEvent[]
}

model Album {
  id             Int             @id @default(autoincrement())
  albumName      String
  artistName     String
  image          String          @db.VarChar(300)
  reviews        Review[]
  song           Song[]
  albumsOfTheDay AlbumOfTheDay[]
}

model Artist {
  id          Int    @id @default(autoincrement())
  name        String @db.VarChar(300)
  description String
}

model Song {
  id      Int    @id @default(autoincrement())
  name    String
  albumId Int
  album   Album  @relation(fields: [albumId], references: [id])

  @@index([albumId], map: "Song_albumId_fkey")
}

model UserEvent {
  userId  Int
  eventId Int
  event   Event @relation(fields: [eventId], references: [id])
  user    User  @relation(fields: [userId], references: [id])

  @@id([userId, eventId])
  @@index([eventId], map: "UserEvent_eventId_fkey")
}

model Favorite {
  id       Int    @id @default(autoincrement())
  userId   Int
  entity   Entity
  entityId Int
  user     User   @relation(fields: [userId], references: [id])

  @@index([userId], map: "Favorite_userId_fkey")
}

model AlbumOfTheDay {
  id      Int      @id @default(autoincrement())
  date    DateTime @default(now())
  albumId Int
  album   Album    @relation(fields: [albumId], references: [id])
  userId  Int
  user    User     @relation(fields: [userId], references: [id])

  @@index([albumId], map: "AlbumOfTheDay_albumId_fkey")
  @@index([userId], map: "AlbumOfTheDay_userId_fkey")
}

enum Entity {
  ALBUM
  ARTIST
  SONG
}
